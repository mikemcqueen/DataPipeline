

figure out the Class[] hack in DP::Message.
string_view Class param?

g_pDisplay

static charsets in DcrTrades_t.
overall, clean up Dcr* of charset cruft

DcrWindow.cpp, remove inline code from .h

widget IDs as empty enum class + constexpr + MakeId
review some of the enable_if/concepts ideas for restricting MakeId to specific 
types (WindowId_t, WidgetId_t, EventId_t, etc.)
	maybe i can use typeid(T) == typeid(type1) || typeid(type2) etc.
	probably need to use a magic value in the scoped enum to enable this.

TableWindow should not inherit from TabWindow. A window *has a* a table,
not *is a* table.

I think the word transaction is wrong. State would also be wrong. This is a container
for a set of states really.  or a container for a state machine?

Move TableInfo_t.h to DcrLib. DcrTableTypes?

Ui::Window:
  --can be moved elsewhere:
  * anything that takes a CSurface, maybe? New derived type: Virtual_t, parallel
    type of WithHandle_t, emphasizing "CSurface-based" recognition.

BrokerWindow::IsTabWindow shit. goes.

Timing in Tesseract GetText, GetTableText, perhaps DP processing of each event?
with special Timing log level?
Try release build after timing.

saw weird "out of pool items (71)" error.  71?  WTF? I know tesseract is slow but jeez.

Probably want TiBroker* to do some text massaging. that means a co-routine-loop sourced
synchronous screenshot will want to "translate" then "interpret". and there will probably
be some commonality between TiBrokerBuy, TiBrokerSell. price text for example

	
c++20: * == done(ish)
	range_for (as_const? or just const auto) whereever const_iterator is defined. read up on as_const vs. const auto
	public + delete instead of private copy/assignment/move
	enum class
	constexpr
		static const -> constexpr (generally)
	typedef -> using
	char* param -> string_view
	bool get(Struct* pResult) -> optional<Struct> get()
